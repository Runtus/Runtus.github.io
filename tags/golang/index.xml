<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on Runtus</title>
    <link>https://runtus.top/tags/golang/</link>
    <description>Recent content in golang on Runtus</description>
    <image>
      <url>https://lao-lan-go.oss-cn-beijing.aliyuncs.com/highQua/pixiv34.JPG</url>
      <link>https://lao-lan-go.oss-cn-beijing.aliyuncs.com/highQua/pixiv34.JPG</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 28 Jan 2022 09:13:38 +0000</lastBuildDate><atom:link href="https://runtus.top/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go-learning-1</title>
      <link>https://runtus.top/posts/go-learning-1/</link>
      <pubDate>Fri, 28 Jan 2022 09:13:38 +0000</pubDate>
      
      <guid>https://runtus.top/posts/go-learning-1/</guid>
      <description>Golang学习记录
关于swtich Golang中的switch的每个case自带break关键字，即不用手动去设置break关键字。 import ( &amp;#34;fmt&amp;#34; ) func main(){ variables := 12 switch variables { case 24: fmt.Println(&amp;#39;24&amp;#39;) case 12: fmt.Println(&amp;#39;12&amp;#39;) case 36: fmt.Println(&amp;#39;36&amp;#39;) default: fmt.Println(&amp;#39;114514&amp;#39;) } } // 12 如果在其他语言中这样编写switch代码块，36和default代码块中的输出也会执行。 fallthrough关键字 当然，golang也提供了能够无视掉默认break的关键字，即fallthrough，在指定的case最后一行加上fallthrough，则对应的case代码块将会忽视掉默认的break操作。 // 接上 func main(){ variables := 12 switch variables { case 24: fmt.Println(&amp;#39;24&amp;#39;) case 12: fmt.Println(&amp;#39;12&amp;#39;) fallthrough case 36: fmt.Println(&amp;#39;36&amp;#39;) default: fmt.Println(&amp;#39;114514&amp;#39;) } } // 12 // 36 关于数组 在golang中的数组和c一样，一旦定义了大小就不可更改，且声明方式有多种，如下: // var variable_name [SIZE] variable_type func main(){ var balance = [3]float32{100, 2.</description>
    </item>
    
  </channel>
</rss>
